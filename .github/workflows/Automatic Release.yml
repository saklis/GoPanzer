name: Automatic Release

on:
  push:
    branches:
      - main # Assuming you're using the main branch; change if necessary

jobs:
  build_and_release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install required libraries
      run: sudo apt-get update && sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21

    - name: Build
      run: go build -v -o GoPanzer.exe ./...

    - name: Create Git Tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag "release-${{ github.sha }}"
        git push origin "release-${{ github.sha }}"

    - name: Archive Executable and Assets into ZIP
      run: zip -r release.zip GoPanzer.exe Assets/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: Upload Release ZIP Archive
      id: upload-release-archive
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release.zip
        asset_name: release.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
